{% extends "../../../templates/layout.twig" %}
{% set component = styles.colour %}
{% block title %}{{ component.title|title }}{% endblock %}
{% block content %}
    {{ parent(component) }}
    {% include "../../../templates/component-header.twig" with {component} %}
    {% include "../../../templates/style-description.twig" with {component} %}
    <div data-c-container="medium" data-c-padding="bottom(triple)">
        <h2 data-c-heading="h2" data-c-margin="top(3) bottom(1)">
            Black, White, Grey, and Theme Colours
        </h2>
        <p data-c-margin="bottom(half)">If you're using Clone through <a href="#about-installation" title="Learn about installing Clone as a Node Module.">NPM</a>, it comes with a built in theme system to help you build in your brand aesthetic. There are customizable variables for black, white, gre/ay, and 5 distinct theme colours.</p>
        <p data-c-margin="bottom(double)">In practice, theme colours are accessed using <code class="language-html">{% filter escape %}cX{% endfilter %}</code>, where <code class="language-html">{% filter escape %}X{% endfilter %}</code> can be any number between 1 and 5. We recommend setting up your theme colours in order of importance: 1 being your primary, 2 being your secondary, etc. Black, white, and gre/ay are accessed using their respective names (and yes, we included both spellings!).</p>
        <div data-c-grid="gutter" data-c-padding="bottom(half)">
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="black(30)" data-c-colour="black" data-c-border="all(thin, solid, black)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Black</span>
                </div>
            </div>
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="grey(30)" data-c-colour="grey" data-c-border="all(thin, solid, grey)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Gre/ay</span>
                </div>
            </div>
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="white(30)" data-c-colour="black" data-c-border="all(thin, solid, black)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>White</span>
                </div>
            </div>
        </div>
        <div data-c-grid="gutter">
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="c1(30)" data-c-colour="c1" data-c-border="all(thin, solid, c1)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Theme 1</span>
                </div>
            </div>
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="c2(30)" data-c-colour="c2" data-c-border="all(thin, solid, c2)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Theme 2</span>
                </div>
            </div>
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="c3(30)" data-c-colour="c3" data-c-border="all(thin, solid, c3)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Theme 3</span>
                </div>
            </div>
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="c4(30)" data-c-colour="c4" data-c-border="all(thin, solid, c4)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Theme 4</span>
                </div>
            </div>
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="c5(30)" data-c-colour="c5" data-c-border="all(thin, solid, c5)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Theme 5</span>
                </div>
            </div>
        </div>
        <h2 data-c-heading="h2" data-c-margin="top(3) bottom(1)">
            Go, Slow, Stop
        </h2>
        <p data-c-margin="bottom(normal)">Clone also provides you with three customizable action colours: go (good), slow (attention), stop (error).</p>
        <div data-c-grid="gutter" data-c-padding="bottom(half)">
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="go(30)" data-c-colour="go" data-c-border="all(thin, solid, go)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Go</span>
                </div>
            </div>
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="slow(30)" data-c-colour="slow" data-c-border="all(thin, solid, slow)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Slow</span>
                </div>
            </div>
            <div data-c-grid-item="base(1of2) tp(1of5)">
                <div data-c-background="stop(30)" data-c-colour="stop" data-c-border="all(thin, solid, stop)" data-c-radius="rounded" data-c-alignment="centre" data-c-padding="top(normal) right(half) bottom(normal) left(half)">
                    <span>Stop</span>
                </div>
            </div>
        </div>
        <h2 data-c-heading="h2" data-c-margin="top(3) bottom(1)">
            Sitewide Colour Settings
        </h2>
        <p data-c-margin="bottom(normal)">Clone allows you to customize the following sitewide colour settings:</p>
        <ul>
            <li>
                <strong>Text Selection Background Colour</strong> <span data-c-colour="grey">(changes the colour of the background behind highlighted text)</span>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-selection-background-colour{% endfilter %}</code></li>
                </ul>
            </li>
            <li>
                <strong>Focus Colour</strong> <span data-c-colour="grey">(changes the focus border colour of buttons and input fields)</span>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-focus-colour{% endfilter %}</code></li>
                </ul>
            </li>
            <li>
                <strong>Visited Links Colour</strong> <span data-c-colour="grey">(changes the colour of links that have already been clicked on)</span>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-visited-colour{% endfilter %}</code></li>
                </ul>
            </li>
        </ul>
        <h3 data-c-heading="h3" data-c-margin="top(2) bottom(1)" data-c-padding="bottom(1)">Hover Colors</h3>
        <p data-c-margin="bottom(1)">Clone offers a sitewide variable that allows you to customize the generic hover color of links and buttons, but in some instances you'll want to customize the hover color to accommodate for accessibility or color schemes. In order to do this, Clone provides an attribute that provides access to the entire theme palette discussed above.</p>
        <p data-c-margin="bottom(1)">To set the sitewide hover colour, you can use the <code class="language-scss">{% filter escape %}$clone-hover-colour{% endfilter %}</code> variable.</p>
        <p data-c-margin="bottom(1)">To set a custom hover color on an element, you can use the <code class="language-html">{% filter escape %}data-c-hover-color="COLOR"{% endfilter %}</code> attribute. The options available to this attribute are outlined below.</p>
        <div>
            <pre><code class="language-md"># COLOR

white
gray / grey
black
c1 (Theme Colour 01)
c2 (Theme Colour 02)
c3 (Theme Colour 03)
c4 (Theme Colour 04)
c5 (Theme Colour 05)
stop
slow
go</code></pre>
        </div>
        <h2 data-c-heading="h2" data-c-margin="top(3) bottom(1)">
            Component Colours
        </h2>
        <p data-c-margin="bottom(normal)">Clone allows you to customize the following component specific colour settings:</p>
        <ul>
            <li>
                <strong>Accordions</strong>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-accordion-border-colour{% endfilter %}</code></li>
                    <li><code class="language-scss">{% filter escape %}$clone-accordion-alternating-background-colour{% endfilter %}</code></li>
                </ul>
            </li>
            <li>
                <strong>Alerts</strong>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-alert-information{% endfilter %}</code></li>
                    <li><code class="language-scss">{% filter escape %}$clone-alert-warning{% endfilter %}</code></li>
                    <li><code class="language-scss">{% filter escape %}$clone-alert-error{% endfilter %}</code></li>
                </ul>
            </li>
            <li>
                <strong>Blockquotes</strong>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-blockquote-colour{% endfilter %}</code></li>
                </ul>
            </li>
            <li>
                <strong>Code Blocks</strong>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-code-background{% endfilter %}</code></li>
                </ul>
            </li>
            <li>
                <strong>Menus</strong>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-menu-background-colour{% endfilter %}</code></li>
                    <li><code class="language-scss">{% filter escape %}$clone-submenu-background-colour{% endfilter %}</code></li>
                    <li><code class="language-scss">{% filter escape %}$clone-menu-font-colour{% endfilter %}</code></li>
                    <li><code class="language-scss">{% filter escape %}$clone-menu-divider-colour{% endfilter %}</code></li>
                    <li><code class="language-scss">{% filter escape %}$clone-menu-icon-colour{% endfilter %}</code></li>
                </ul>
            </li>
            <li>
                <strong>Pullquotes</strong>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-pullquote-colour{% endfilter %}</code></li>
                </ul>
            </li>
            <li>
                <strong>Tables</strong>
                <ul>
                    <li><code class="language-scss">{% filter escape %}$clone-table-heading-colour{% endfilter %}</code></li>
                    <li><code class="language-scss">{% filter escape %}$clone-table-alternating-colour{% endfilter %}</code></li>
                </ul>
            </li>
        </ul>
        {% include "../../../templates/changes.twig" with {component} %}
    </div>
{% endblock %}
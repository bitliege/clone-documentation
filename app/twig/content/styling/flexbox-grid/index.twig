{% extends "../../../templates/layout.twig" %}
{% set component = stylesModel.styles.flexboxGrid %}
{% block title %}{{ component.title|title }}{% endblock %}
{% block content %}
    {{ parent(component) }}
    {% include "../../../templates/component-header.twig" with {component} %}
    {% include "../../../templates/style-description.twig" with {component} %}
    <div data-c-container="medium" data-c-padding="tb(triple)">
        <div
            data-c-alert="information"
            data-c-radius="rounded"
            data-c-padding="half"
            data-c-margin="bottom(normal)"
            role="alert">
            <div>
                <span
                    data-c-margin="bottom(quarter)"
                    data-c-heading="h5"
                    data-c-font-weight="bold">
                    <i
                        aria-hidden="true"
                        class="material-icons">
                        star
                    </i>
                    Just a heads up!
                </span>
                <p>
                    Clone has a built in flexbox grid to help you easily create layouts compatible with IE11. It's worth noting however, that depending on your unique browser support needs, including this grid is not mandatory and removing it will drastically reduce Clone's file size. You can choose to include the gridless version of Clone via CDN or Sass using the information in <a href="#about-installation" title="View installation information.">Installation</a>. We recommend <a href="https://css-tricks.com/snippets/css/complete-guide-grid/" title="Learn more about CSS Grid." target="_blank">CSS Grid</a> for projects that no longer need to support IE11.
                </p>
            </div>
        </div>
        <div>
            <p data-c-margin="bottom">Clone is built with a customizable grid that defaults to a 12 column layout. You can modify this number of columns by changing the <code class="language-scss">{% filter escape %}$clone-grid-columns{% endfilter %}</code> variable.</p>
            <p data-c-margin="bottom">Using the flexbox grid consists of two parts: the grid wrapper and grid items. The grid wrapper allows you to customize the vertical alignment of the items inside, as well as whether you'd like the grid items to be separated by whitespace (AKA a gutter).</p>
            <p data-c-margin="bottom">Items inside the grid always default to a full, single column until you tell them otherwise using a media query and grid value. This means you can build grids with 1, 2, 3 ... to 12 columns using an <code class="language-md">{% filter escape %}XOFY{% endfilter %}</code> structure (e.g. <code class="language-html">{% filter escape %}<div data-c-grid-item="base(1of1) tp(1of2) tl(1of3)"></div>{% endfilter %}</code>). This grid item will be full width on all devices below portrait orientation tablets, at which point it switches to 50% of the width. When the device is a tablet in landscape orientation, the column shrinks further to be 33.33% of the width.</p>
            <p data-c-margin="bottom">Usage (Grid Wrapper): <code class="language-html">{% filter escape %}<div data-c-grid="OPTIONS"></div>{% endfilter %}</code></p>
            <p data-c-margin="bottom">Usage (Grid Items): <code class="language-html">{% filter escape %}<div data-c-grid-item="MEDIA(XOFY)"></div>{% endfilter %}</code></p>
            <h4
                data-c-font-size="h4"
                data-c-margin="top(double) bottom(normal)">
                Available Arguments
            </h4>
            <div data-c-grid="gutter">
                <div data-c-grid-item="equal-col tl(1of3)">
                    <pre><code class="language-md"># OPTIONS (Grid Wrapper)

top
middle
bottom

gutter (adds whitespace between items)</code></pre>
                </div>
                <div data-c-grid-item="equal-col tl(1of3)">
                    <pre><code class="language-md"># MEDIA (Grid Item)

base
pp (Phone - Portrait)
pl (Phone - Landscape)
tp (Tablet - Portrait)
tl (Tablet - Landscape)
ds (Desktop - Small)
dm (Desktop - Medium)
dl (Desktop - Large)</code></pre>
                </div>
                <div data-c-grid-item="equal-col tl(1of3)">
                    <pre><code class="language-md"># XOFY (Grid Item)

Clone defaults to a 12 column grid, e.g.
1of3 (33%)
5of12 (41.66%)
3of4 (75%)

* The number of columns can be changed 
using the $clone-grid-columns variable.</code></pre>
                </div>
            </div>
        </div>
        <h4
            data-c-font-size="h4"
            data-c-margin="top(double) bottom(normal)">
            Examples
        </h4>
        <div data-c-padding="bottom(double)">
            <p data-c-margin="bottom(normal)">A grid of 3 items in 3 columns that triggers at the landscape tablet media query (e.g. <code class="language-html">{% filter escape %}<div data-c-grid-item="tl(1of3)"></div>{% endfilter %}</code>).</p>
            <div data-c-grid="gutter">
                <div data-c-grid-item="tl(1of3)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tl(1of3)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tl(1of3)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
            </div>
        </div>
        <div>
                <p data-c-margin="bottom(normal)">A grid of 12 items in 2 columns that triggers at the portrait tablet media query and 6 columns at the landscape tablet media query (e.g. <code class="language-html">{% filter escape %}<div data-c-grid-item="tp(1of2) tl(1of6)"></div>{% endfilter %}</code>).</p>
            <div data-c-grid="gutter">
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
                <div data-c-grid-item="tp(1of2) tl(1of6)">
                    <div 
                        data-c-background="c5(100)"
                        data-c-padding="normal">
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
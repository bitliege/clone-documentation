{% extends "../../../templates/layout.twig" %}
{% set component = {
    id: "getIns",
    title: "install clone"
} %}
{% block title %}{{ component.title|title }}{% endblock %}
{% block content %}
    {{ parent(component) }}
    {% include "../../../templates/header.twig" with {component} %}
    <div data-c-container="medium" data-c-padding="tb(triple)">
        <ul>
            <li>
                <a href="#try" title="Learn about how you can try Clone out before using it on a project.">
                    Try It Out
                </a>
            </li>
            <li>
                <a href="#cdn" title="Learn how you can use a CDN to install Clone on your project.">
                    Content Delivery Network (CDN)
                </a>
            </li>
            <li>
                <a href="#npm" title="Learn how youc an use NPM to install Clone on your project.">
                    Node Package Manager (NPM)
                </a>
            </li>
        </ul>
        <div>
            
            {# Try It Out #}
            <span id="try"></span>
            <h2 data-c-heading="h2" data-c-padding="top(3)" data-c-margin="bottom(1)">
                Try It Out
            </h2>
            <p data-c-margin="bottom(normal)">If you want to try Clone out before installing it on your project, we've provided a ready-to-go boilerplate:</p>
            <ul>
                <li><a href="https://github.com/joshdrink/clone-playground" title="Download and install Clone as a development environment." target="_blank">Clone Playground</a>
                    <ul>
                        <li>
                            This lets you pull down a full development environment that let's you theme and prototype using Clone.
                        </li>
                        <li>
                            This option is great for building static websites or prototypes (they can even be hosted on Github Pages!).
                        </li>
                    </ul>
                </li>
            </ul>
            
            {# Install via CDN #}
            <span id="cdn"></span>
            <h2 data-c-heading="h2" data-c-padding="top(3)" data-c-margin="bottom(1)">
                Content Delivery Network (CDN)
            </h2>
            <p data-c-margin="bottom(half)">This option forces the use of the Brave default theme.</p>
            <p>If you want to get Clone up and running and have no interest in creating your own theme, you can include Clone's CSS and JavaScript files as linked resources. This allows for a quick and easy way to generate prototypes using Clone's native theme (See <a href="#about-themeing">Themeing</a> for more information on Brave, Clone's default theme).</p>
            <h3 data-c-heading="h3" data-c-margin="top(2) bottom(1)" data-c-padding="bottom(1)">
                Without Flexbox Grid
            </h3>
            <div data-c-margin="bottom(half)">
                <img alt="GitHub file size in bytes" src="https://img.shields.io/github/size/joshdrink/clone-framework/dist/css/gzip/clone-gridless.min.css.gz.svg?label=CSS%20%28minified%2C%20gzipped%29">
                <img alt="GitHub file size in bytes" src="https://img.shields.io/github/size/joshdrink/clone-framework/dist/js/gzip/clone.min.js.gz.svg?label=JS%20%28minified%2C%20gzipped%29">
            </div>
            <pre><code class="language-twig">{% filter escape %}<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/clone-framework@{{ cloneVersion }}/dist/css/clone-gridless.min.css">
<script src="https://cdn.jsdelivr.net/npm/clone-framework@{{ cloneVersion }}/dist/js/clone.min.js"></script>{% endfilter %}</code></pre>
            <h3 data-c-heading="h3" data-c-margin="top(2) bottom(1)" data-c-padding="bottom(1)">
                With Flexbox Grid
            </h3>
            <div data-c-margin="bottom(half)">
                <img alt="GitHub file size in bytes" src="https://img.shields.io/github/size/joshdrink/clone-framework/dist/css/gzip/clone.min.css.gz.svg?label=CSS%20%28minified%2C%20gzipped%29">
                <img alt="GitHub file size in bytes" src="https://img.shields.io/github/size/joshdrink/clone-framework/dist/js/gzip/clone.min.js.gz.svg?label=JS%20%28minified%2C%20gzipped%29">
            </div>
            <pre><code class="language-twig">{% filter escape %}<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/clone-framework@{{ cloneVersion }}/dist/css/clone.min.css">
<script src="https://cdn.jsdelivr.net/npm/clone-framework@{{ cloneVersion }}/dist/js/clone.min.js"></script>{% endfilter %}</code></pre>
            
            {# Install via NPM #}
            <span id="npm"></span>
            <h2 data-c-heading="h2" data-c-padding="top(3)" data-c-margin="bottom(1)">
                Node Package Manager (NPM)
            </h2>
            <p data-c-margin="bottom(half)">This option allows you to fully customize Clone's theme.</p>
            <p data-c-margin="bottom(half)">
                Clone is built in a way that allows you to theme the aesthetic of the system without the need to alter Clone's source files. This means that you'll be able to update Clone without any worry of losing or modifying your changes. All theming will occur in your project's root Sass directory and pull Clone's primary .scss file from node_modules.
            </p>
            <p data-c-margin="bottom(normal)">
                While it doesn't matter how your project compiles Sass, theming Clone requires that your project be running <a href="https://sass-lang.com/" title="Learn more about Sass." target="_blank">Sass</a> and <a href="https://github.com/postcss/autoprefixer" title="Learn more about Autoprefixer." target="_blank">Autoprefixer</a>. <a href="https://kenwheeler.github.io/cash/" title="Learn more about Cash." target="_blank">Cash</a> is built right into Clone, so no need to include it again.
            </p>
            <ol data-c-margin="bottom">
                <li>From inside your project, run <code class="language-bash">npm install clone-framework --save-dev</code></li>
                <li>At the top of your main project <code class="language-md">.scss</code> file, include the following:</li>
            </ol>
            <pre><code class="language-scss">{% filter escape %}// My Custom Clone Theme
// Please note that Clone must be included last, after all of your custom variables.

// Clone Theme Variables
// All available theme variables can be found at https://github.com/joshdrink/clone-framework/blob/master/app/scss/core/_defaults.scss

// Include Clone
@import "../node_modules/clone-framework/app/scss/clone";

[data-clone] {
    // Your custom CSS goes here.
}{% endfilter %}</code></pre>
            <p data-c-margin="top(normal) bottom(normal)">
                For now, it is also required that Clone's JavaScript file be imported using the CDN.
            </p>
            <pre><code class="language-twig">{% filter escape %}<script src="https://cdn.jsdelivr.net/npm/clone-framework@{{ cloneVersion }}/dist/js/clone.min.js"></script>{% endfilter %}</code></pre>
        </div>
    </div>
{% endblock %}
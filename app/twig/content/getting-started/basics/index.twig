{% extends "../../../templates/layout.twig" %}
{% set component = {
    id: "getBas",
    title: "basic usage of clone"
} %}
{% block title %}{{ component.title|title }}{% endblock %}
{% block content %}
    {{ parent(component) }}
    {% include "../../../templates/header.twig" with {component} %}
    <div data-c-container="medium" data-c-padding="bottom(3)">
        <h2 data-c-heading="h2" data-c-padding="top(3)" data-c-margin="bottom(1)">
            How To Use Clone
        </h2>
        <div>
            <p data-c-margin="bottom(half)">
                Clone is built a little differently than a standard front-end framework. Instead of classes, Clone uses data-attributes to leverage a level of extra functionality right in your markup. This means that Clone is namespaced away from your custom code and won't conflict with any of your existing work.
            </p>
            <p data-c-margin="bottom">
                Here's an example of how Clone works:
            </p>
            <pre><code class="language-twig">{% filter escape %}<div data-clone>
    <div
        data-c-backround="c2(90)"
        data-c-padding="all(normal)"
        data-c-colour="white">
        <h5
            data-c-font-size="h5"
            data-c-margin="bottom(half)"
            data-c-font-weight="700">Sample Title</h5>
        <p>This is a sample sentence in a Clone example.</p>
    </div>
</div>{% endfilter %}</code></pre>
            <p data-c-margin="top(normal) bottom(normal)">Which will appear on your site as:</p>
            <div
                data-c-background="c2(90)"
                data-c-padding="all(normal)"
                data-c-colour="white"
                data-c-margin="bottom">
                <h5
                    data-c-font-size="h5"
                    data-c-margin="bottom(half)"
                    data-c-font-weight="700">Sample Title</h5>
                <p>This is a sample sentence in a Clone example.</p>
            </div>
            <p data-c-margin="bottom">Let's break this apart into 3 different types of Clone utility attribute:</p>
            <ol data-c-margin="bottom">
                <li>
                    The <code class="language-html">{% filter escape %}<div data-clone>{% endfilter %}</code> attribute.<br>
                    This attribute tells Clone that styles should be applied to any child element nested inside. If you're building from scratch, you can include this data-attribute on the <code class="language-html">{% filter escape %}<body>{% endfilter %}</code> element to give Clone access to your entire project. If you just need Clone here and there on an existing project, you can include this attribute as-needed on any element you'd like.
                </li>
                <li>
                    The <code class="language-html">{% filter escape %}<div data-c-colour="white">{% endfilter %}</code> type of variable attribute.<br>
                    This type of attribute functions as a declaration for a certain CSS value. These types of attributes only take one argument in the quotation marks and follow a set of rules that can be found in the utility section below. In this example, the attribute <code class="language-html">{% filter escape %}<div data-c-colour="">{% endfilter %}</code> takes an argument from a defined list of colour variables, one of which is <code class="language-md">white</code>.
                </li>
                <li>
                    The <code class="language-html">{% filter escape %}<div data-c-padding="bottom(normal)">{% endfilter %}</code> type of function attribute.<br>
                    These attributes are unique in that they take multiple arguments in the quotation marks and can even modify each argument using keywords within the parantheses. Each attribute has a unique set, but they all follow standard rules to help you learn them quickly. In this example, <code class="language-html">{% filter escape %}<div data-c-padding="">{% endfilter %}</code> can take multiple arguments for the orientation you're trying to target (i.e. top, right, bottom, left). Each of these can subsequently be modified using parentheses to increase or decrease the amount of padding you want (i.e. quarter, half, normal, double, triple). A more complex version of this attribute might look like: <code class="language-html">{% filter escape %}<div data-c-padding="top(half) right(double) bottom(normal) left(double)">{% endfilter %}</code>.
                </li>
            </ol>
            <p data-c-margin="bottom(half)">A finite list of Utility attributes and how they're used can be found here: <a href="#utilities">Utility Attributes in Clone</a>.</p>
            <p>Above and beyond utility attributes are component attributes, which allow you to build unique and accessible elements. Each individual component is outlined in the sidebar of the site. These component attributes can be combined with utility attributes to design and style each component to exactly what you need.</p>
        </div>
    </div>
{% endblock %}